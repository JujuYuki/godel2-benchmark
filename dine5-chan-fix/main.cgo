def main.main():
    letmem z0;
    letmem z1;
    letmem z2;
    letmem z3;
    letmem z4;
    let t5 = newchan main.main0.t5_chan0, 0;
    let t6 = newchan main.main0.t6_chan0, 0;
    let t7 = newchan main.main0.t7_chan0, 0;
    let t8 = newchan main.main0.t8_chan0, 0;
    let t9 = newchan main.main0.t9_chan0, 0;
    spawn main.phil(z0, z1, t5, t6);
    spawn main.phil(z1, z2, t6, t7);
    spawn main.phil(z2, z3, t7, t8);
    spawn main.phil(z3, z4, t8, t9);
    spawn main.phil(z4, z0, t9, t5);
    spawn main.Fork(z0, t5);
    spawn main.Fork(z1, t6);
    spawn main.Fork(z2, t7);
    spawn main.Fork(z3, t8);
    spawn main.Fork(z4, t9);
def main.phil(fork1, fork2, ch1, ch2):
    call main.phil#1(fork1, fork2, ch1, ch2);
def main.phil#1(fork1, fork2, ch1, ch2):
    select
      case recv ch1; call main.phil#2(fork1, fork2, ch1, ch2);
      case recv ch2; call main.phil#6(fork1, fork2, ch1, ch2);
    endselect;
def main.phil#2(fork1, fork2, ch1, ch2):
    select
      case recv ch2; call main.phil#4(fork1, fork2, ch1, ch2);
      case tau; call main.phil#5(fork1, fork2, ch1, ch2);
    endselect;
def main.phil#4(fork1, fork2, ch1, ch2):
    read fork1;
    send ch1;
    read fork2;
    send ch2;
    call main.phil#1(fork1, fork2, ch1, ch2);
def main.phil#5(fork1, fork2, ch1, ch2):
    read fork1;
    send ch1;
    call main.phil#1(fork1, fork2, ch1, ch2);
def main.phil#6(fork1, fork2, ch1, ch2):
    select
      case recv ch1; call main.phil#8(fork1, fork2, ch1, ch2);
      case tau; call main.phil#9(fork1, fork2, ch1, ch2);
    endselect;
def main.phil#8(fork1, fork2, ch1, ch2):
    read fork2;
    send ch2;
    read fork1;
    send ch1;
    call main.phil#1(fork1, fork2, ch1, ch2);
def main.phil#9(fork1, fork2, ch1, ch2):
    read fork2;
    send ch2;
    call main.phil#1(fork1, fork2, ch1, ch2);
def main.Fork(fork, ch):
    call main.Fork#1(fork, ch);
def main.Fork#1(fork, ch):
    write fork;
    send ch;
    recv ch;
    call main.Fork#1(fork, ch);
